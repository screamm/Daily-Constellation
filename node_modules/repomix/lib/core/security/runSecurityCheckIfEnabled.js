var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { runSecurityCheck } from './securityCheck.js';
export const runSecurityCheckIfEnabled = (rawFiles_1, config_1, progressCallback_1, ...args_1) => __awaiter(void 0, [rawFiles_1, config_1, progressCallback_1, ...args_1], void 0, function* (rawFiles, config, progressCallback, deps = {
    runSecurityCheck,
}) {
    if (config.security.enableSecurityCheck) {
        progressCallback('Running security check...');
        return yield deps.runSecurityCheck(rawFiles, progressCallback);
    }
    return [];
});
//# sourceMappingURL=runSecurityCheckIfEnabled.js.map