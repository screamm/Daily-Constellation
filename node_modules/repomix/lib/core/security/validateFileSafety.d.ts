import type { RepomixConfigMerged } from '../../config/configSchema.js';
import type { RepomixProgressCallback } from '../../shared/types.js';
import type { RawFile } from '../file/fileTypes.js';
export declare const validateFileSafety: (rawFiles: RawFile[], progressCallback: RepomixProgressCallback, config: RepomixConfigMerged, deps?: {
    runSecurityCheckIfEnabled: (rawFiles: RawFile[], config: RepomixConfigMerged, progressCallback: RepomixProgressCallback, deps?: {
        runSecurityCheck: (rawFiles: RawFile[], progressCallback?: RepomixProgressCallback) => Promise<import("./securityCheck.js").SuspiciousFileResult[]>;
    }) => Promise<import("./securityCheck.js").SuspiciousFileResult[]>;
    filterOutUntrustedFiles: (rawFiles: RawFile[], suspiciousFilesResults: import("./securityCheck.js").SuspiciousFileResult[]) => RawFile[];
}) => Promise<{
    safeRawFiles: RawFile[];
    safeFilePaths: string[];
    suspiciousFilesResults: import("./securityCheck.js").SuspiciousFileResult[];
}>;
//# sourceMappingURL=validateFileSafety.d.ts.map